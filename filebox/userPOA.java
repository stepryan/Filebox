package filebox;


/**
* filebox/userPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from filebox.idl
* 22 March 2013 23:23:23 o'clock GMT
*/

public abstract class userPOA extends org.omg.PortableServer.Servant
 implements filebox.userOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_uid", new java.lang.Integer (0));
    _methods.put ("_get_name", new java.lang.Integer (1));
    _methods.put ("_set_name", new java.lang.Integer (2));
    _methods.put ("_get_password", new java.lang.Integer (3));
    _methods.put ("_set_password", new java.lang.Integer (4));
    _methods.put ("_get_lastlogin", new java.lang.Integer (5));
    _methods.put ("_set_lastlogin", new java.lang.Integer (6));
    _methods.put ("_get_filestatus", new java.lang.Integer (7));
    _methods.put ("_set_filestatus", new java.lang.Integer (8));
    _methods.put ("addUser", new java.lang.Integer (9));
    _methods.put ("addFile", new java.lang.Integer (10));
    _methods.put ("changeFileStatus", new java.lang.Integer (11));
    _methods.put ("removeFile", new java.lang.Integer (12));
    _methods.put ("checkFileUpdates", new java.lang.Integer (13));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // filebox/user/_get_uid
       {
         int $result = (int)0;
         $result = this.uid ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // filebox/user/_get_name
       {
         String $result = null;
         $result = this.name ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // filebox/user/_set_name
       {
         String newName = in.read_string ();
         this.name (newName);
         out = $rh.createReply();
         break;
       }

       case 3:  // filebox/user/_get_password
       {
         String $result = null;
         $result = this.password ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // filebox/user/_set_password
       {
         String newPassword = in.read_string ();
         this.password (newPassword);
         out = $rh.createReply();
         break;
       }

       case 5:  // filebox/user/_get_lastlogin
       {
         int $result = (int)0;
         $result = this.lastlogin ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 6:  // filebox/user/_set_lastlogin
       {
         int newLastlogin = in.read_long ();
         this.lastlogin (newLastlogin);
         out = $rh.createReply();
         break;
       }

       case 7:  // filebox/user/_get_filestatus
       {
         short $result = (short)0;
         $result = this.filestatus ();
         out = $rh.createReply();
         out.write_short ($result);
         break;
       }

       case 8:  // filebox/user/_set_filestatus
       {
         short newFilestatus = in.read_short ();
         this.filestatus (newFilestatus);
         out = $rh.createReply();
         break;
       }

       case 9:  // filebox/user/addUser
       {
         int uid = in.read_long ();
         String name = in.read_string ();
         String password = in.read_string ();
         filebox.user $result = null;
         $result = this.addUser (uid, name, password);
         out = $rh.createReply();
         filebox.userHelper.write (out, $result);
         break;
       }

       case 10:  // filebox/user/addFile
       {
         String files = in.read_string ();
         filebox.user $result = null;
         $result = this.addFile (files);
         out = $rh.createReply();
         filebox.userHelper.write (out, $result);
         break;
       }

       case 11:  // filebox/user/changeFileStatus
       {
         String files = in.read_string ();
         short filestatus = in.read_short ();
         filebox.user $result = null;
         $result = this.changeFileStatus (files, filestatus);
         out = $rh.createReply();
         filebox.userHelper.write (out, $result);
         break;
       }

       case 12:  // filebox/user/removeFile
       {
         String files = in.read_string ();
         filebox.user $result = null;
         $result = this.removeFile (files);
         out = $rh.createReply();
         filebox.userHelper.write (out, $result);
         break;
       }

       case 13:  // filebox/user/checkFileUpdates
       {
         String files = in.read_string ();
         int lastlogin = in.read_long ();
         String filename = in.read_string ();
         filebox.user $result = null;
         $result = this.checkFileUpdates (files, lastlogin, filename);
         out = $rh.createReply();
         filebox.userHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:filebox/user:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public user _this() 
  {
    return userHelper.narrow(
    super._this_object());
  }

  public user _this(org.omg.CORBA.ORB orb) 
  {
    return userHelper.narrow(
    super._this_object(orb));
  }


} // class userPOA
